# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "ehci_pci" "ahci" "uhci_hcd" "xhci_pci" "hpsa" "usbhid" "usb_storage" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/be0bb932-25e6-4c51-ad9d-63824eb6ff35";
      fsType = "btrfs";
      options = [ "compress-force=zstd:1" "noatime" "commit=120" "autodefrag" "subvol=nixos" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/be0bb932-25e6-4c51-ad9d-63824eb6ff35";
      fsType = "btrfs";
      options = [ "compress-force=zstd:1" "noatime" "commit=120" "autodefrag" "subvol=home" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/be0bb932-25e6-4c51-ad9d-63824eb6ff35";
      fsType = "btrfs";
      options = [ "compress-force=zstd:1" "noatime" "commit=120" "autodefrag" "subvol=nix" ];
    };

  fileSystems."/var/lib/docker" =
    { device = "/dev/disk/by-uuid/be0bb932-25e6-4c51-ad9d-63824eb6ff35";
      fsType = "btrfs";
      options = [ "compress-force=zstd:1" "noatime" "commit=120" "autodefrag" "subvol=docker" ];
    };

  fileSystems."/var/lib/libvirt/images" =
    { device = "/dev/disk/by-uuid/be0bb932-25e6-4c51-ad9d-63824eb6ff35";
      fsType = "btrfs";
      options = [ "compress-force=zstd:1" "noatime" "commit=120" "autodefrag" "subvol=images" ];
    };

  fileSystems."/data" =
    { device = "/dev/disk/by-uuid/07ae2126-e190-4de0-bb25-6352a3dfd060";
      fsType = "btrfs";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/61305de2-d9be-46fa-b35e-e2c0e34454fe"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
